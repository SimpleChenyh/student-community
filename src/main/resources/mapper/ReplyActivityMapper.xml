<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.manage.mapper.replyActivity.ReplyActivityMapper"> 
    <resultMap type="com.manage.entity.ReplyActivity" id="replyActivityResultMap">
        <id column="reply_activity_id" property="replyActivityid"/>
        <result column="content" property="content"/>
        <result column="reply_date" property="replyDate"/>
        <association property="stu" javaType="com.manage.entity.Student">
            <id column="stu_id" property="stuid" />
            <result column="stu_name" property="stuName" />
        </association>
        <association property="activity" javaType="com.manage.entity.Activity" >
        <id column="activity_id" property="activityid" />
        <result column="activity_title" property="activityTitle"/>
        <result column="activity_loc" property="activityLoc" />
        <result column="activity_content" property="activityContent" />
        <result column="activity_date" property="activityDate" />
        <result column="closing_date" property="closingDate" />
        <result column="start_date" property="startDate" />
        <result column="end_date" property="endDate" />
        <result column="status" property="status" />
        </association>
        <!-- 第一层对活动 -->
        <collection property="replyActivities" ofType="com.manage.entity.ReplyActivity">
         <id column="rereply_activity_id" property="replyActivityid"/>
         <result column="recontent" property="content"/>
         <result column="rereply_date" property="replyDate"/>
         <association property="stu" javaType="com.manage.entity.Student">
            <id column="restu_id" property="stuid" />
            <result column="restu_name" property="stuName" />
        </association>
        <association property="activity" javaType="com.manage.entity.Activity" >
        <id column="reactivity_id" property="activityid" />
        </association>
        <!-- 第二层回复对回复进行回复 -->
            <!-- <collection property="replyActivities" ofType="com.manage.entity.ReplyActivity">
                <id column="reply_activity_id" property="replyActivityid"/>
                <result column="content" property="content"/>
                <result column="reply_date" property="replyDate"/>
            </collection> -->
        </collection> 
    </resultMap>
    <!-- 查询回复数量 -->
    <select id="selectReplyActivity" parameterType="map"  resultMap="replyActivityResultMap">
     select m.reply_activity_id,m.activity_id,m.content,m.reply_date,m.reply_to_reply,m.stu_id,m.stu_name,
    t.reply_activity_id AS rereply_activity_id,t.activity_id  as reactivity_id,t.content as recontent,t.reply_date as rereply_date,t.reply_to_reply as rereply_to_reply,t.stu_id as restu_id,t.stu_name as restu_name from (
    select reply_activity.reply_activity_id,reply_activity.activity_id,reply_activity.content,reply_activity.reply_date,reply_activity.reply_to_reply,student.stu_id,student.stu_name from reply_activity INNER JOIN student
    on student.stu_id = reply_activity.stu_id INNER JOIN activity
    on activity.activity_id = reply_activity.activity_id 
    where reply_activity.reply_to_reply is  null)m left JOIN (
    select reply_activity.reply_activity_id,reply_activity.activity_id,reply_activity.content,reply_activity.reply_date,reply_activity.reply_to_reply,student.stu_id,student.stu_name from reply_activity INNER JOIN student
    on student.stu_id = reply_activity.stu_id INNER JOIN activity
    on activity.activity_id = reply_activity.activity_id 
    where reply_activity.reply_to_reply is not null)t 
    on m.reply_activity_id = t.reply_to_reply
    where m.activity_id = #{ActId}
     <if test="keyWord != null">
        AND ( m.content LIKE '%${keyWord}%' 
        OR m.stu_name LIKE '%${keyWord}%')
        </if>
        order by m.reply_date,t.reply_date DESC
        LIMIT #{pageParam.startIndex},#{pageParam.rows}
    </select>
      <select id="selectReplyActivityCount" parameterType="map"   resultType="int">
     select count(m.reply_activity_id) from (
    select reply_activity.reply_activity_id,reply_activity.activity_id,reply_activity.content,reply_activity.reply_date,reply_activity.reply_to_reply,student.stu_id,student.stu_name from reply_activity INNER JOIN student
    on student.stu_id = reply_activity.stu_id INNER JOIN activity
    on activity.activity_id = reply_activity.activity_id 
    where reply_activity.reply_to_reply is  null)m left JOIN (
    select reply_activity.reply_activity_id,reply_activity.activity_id,reply_activity.content,reply_activity.reply_date,reply_activity.reply_to_reply,student.stu_id,student.stu_name from reply_activity INNER JOIN student
    on student.stu_id = reply_activity.stu_id INNER JOIN activity
    on activity.activity_id = reply_activity.activity_id 
    where reply_activity.reply_to_reply is not null)t 
    on m.reply_activity_id = t.reply_to_reply
    where m.activity_id = #{ActId}
     <if test="keyWord != null">
        AND ( m.content LIKE '%${keyWord}%' 
        OR m.stu_name LIKE '%${keyWord}%')
        </if>
         order by m.reply_date,t.reply_date DESC
    </select>
    <!-- 第一次评论活动 -->
    <insert id="ReplyActivityParent" parameterType="com.manage.entity.ReplyActivity"> 
        insert into reply_activity(stu_id,activity_id,content,reply_date) VALUES(#{stu.stuid},#{activity.activityid},#{content},NOW())
    </insert>
    <!-- 子回复 -->
    <insert id="ReplyActivityChildren" parameterType="com.manage.entity.ReplyActivity">
        insert into reply_activity(stu_id,activity_id,content,reply_to_reply,reply_date) VALUES(#{stu.stuid},#{activity.activityid},#{content},#{replyActivityid},NOW())
    </insert>
</mapper>