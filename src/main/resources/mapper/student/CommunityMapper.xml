<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.manage.mapper.student.CommunityMapper">
    <resultMap type="com.manage.entity.Community" id="communityResultMap">
        <id property="communityid" column="community_id"/>
        <result property="communityName" column="community_name"/>
        <result property="stuNum" column="stu_num"/>
        <result column="img" property="img" />
        <!-- 一对多写法 
            ofType 集合类型所包含的类型
            property Community 中对应的students的变量名
            javaType 用的什么集合类型  list  mybatis可以自动判断一般可以不写
         -->
        <collection property="stus" ofType="com.manage.entity.Student">
            <id property="stuid" column="stu_id"/>
            <result property="stuName" column="stu_name"/>
        </collection>
    </resultMap>
    
    <resultMap type="com.manage.entity.StuCommunityRole" id="stuCommunityRoleMap">
            <result property="stuid" column="stu_id"/>
            <result property="communityRoleid" column="community_role_id"/>
    </resultMap>
    
    
    <select id="queryAll" parameterType="map" resultMap="communityResultMap" >
        SELECT
            c.*, s.stu_name, CASE WHEN t.stu_num IS NULL THEN 0 ELSE t.stu_num END AS 'stu_num'
        FROM community c
        LEFT JOIN community_role cr ON c.community_id = cr.community_id
        LEFT JOIN stu_community_role scr ON cr.community_role_id = scr.community_role_id
        LEFT JOIN student s ON scr.stu_id = s.stu_id
        LEFT JOIN stu_role r ON cr.role_id = r.role_id
        LEFT JOIN (SELECT sc.community_id,COUNT(*) as 'stu_num' FROM stu_community sc 
        GROUP BY sc.community_id ) t ON c.community_id =  t.community_id
        WHERE
            cr.role_id = 1
        <if test="keyWord != null">
        AND(
            c.community_id LIKE '%${keyWord}%'
			OR c.community_name LIKE '%${keyWord}%'
			OR s.stu_name LIKE '%${keyWord}%'
           )
        </if>
        LIMIT ${pageParam.startIndex},${pageParam.rows}
    </select>
    
    <select id="getCommMaster" parameterType="int" resultMap="stuCommunityRoleMap">
        SELECT scr.* FROM community_role cr
        INNER JOIN stu_community_role scr ON cr.community_role_id = scr.community_role_id
        INNER JOIN stu_role sr ON cr.role_id = sr.role_id
        WHERE cr.community_id = #{id} AND sr.role_id = 1
    </select>
    
    <select id="getCount"  parameterType="map"  resultType="int">
        SELECT COUNT(*) FROM (
        SELECT c.community_id
        FROM community c
        LEFT JOIN community_role cr ON c.community_id = cr.community_id
        LEFT JOIN stu_community_role scr ON cr.community_role_id = scr.community_role_id
        LEFT JOIN student s ON scr.stu_id = s.stu_id
        LEFT JOIN stu_role r ON cr.role_id = r.role_id
        LEFT JOIN (SELECT sc.community_id,COUNT(*) as 'stu_num' FROM stu_community sc 
        GROUP BY sc.community_id ) t ON c.community_id =  t.community_id
        WHERE cr.role_id = 1
        <if test="keyWord != null">
            AND(
            c.community_id LIKE '%${keyWord}%'
            OR c.community_name LIKE '%${keyWord}%'
            OR s.stu_name LIKE '%${keyWord}%')
        </if>
        ) t
    </select>
    
    <select id="getMyCommunity" parameterType="int" resultMap="communityResultMap">
        SELECT c.* FROM student s  
        INNER  JOIN stu_community sc ON sc.stu_id = s.stu_id
        INNER JOIN community c ON c.community_id = sc.community_id
        WHERE s.stu_id = #{id}
    </select>

    <select id="getMyMasterCommunity" parameterType="int" resultMap="communityResultMap">
        SELECT c.* FROM stu_community_role scr
        INNER JOIN student s ON scr.stu_id = s.stu_id
        INNER JOIN community_role cr ON scr.community_role_id = cr.community_role_id
        INNER JOIN community c ON cr.community_id = c.community_id
        WHERE s.stu_id = #{id}
    </select>
    
    
    
    <select id="getNewComunityid" resultType="Integer">
        select community_id from community order by community_id desc LIMIT 0,1
    </select>
    
    <select id="getCommMasterRoleid" parameterType="int" resultType="int">
        SELECT cr.community_role_id FROM community_role cr
        WHERE cr.community_id = #{id} AND cr.role_id = 1
    </select>
    
    <insert id="save" parameterType="com.manage.entity.Community" 
        keyProperty="communityid"
     useGeneratedKeys="true" >
        INSERT INTO community (community_name,img) VALUES (#{communityName},#{img})
    </insert>
    
    <delete id="deleteMany">
        DELETE FROM community WHERE community_id in
        <foreach collection="ids" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </delete>
    
    <update id="update" parameterType="com.manage.entity.Community">
        UPDATE community SET community_name=#{communityName} ,img = #{img}
        WHERE (community_id=#{communityid})
    </update>
</mapper>

