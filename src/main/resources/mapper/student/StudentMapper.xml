<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.manage.mapper.student.StudentMapper">
    <resultMap type="com.manage.entity.Student" id="stuSimpleResultMap">
        <id column="stu_id" property="stuid" />
        <result column="stu_name" property="stuName" />
        <result column="stu_sex" property="stuSex" />
        <result column="stu_birthday" property="stuBirthday" />
        <result column="role_name" property="roleName"/>
        <result column="img" property="img"/>
        <result column="introduce" property="introduce"/>
        <association property="classes" javaType="com.manage.entity.Classes">
            <id column="classes_id" property="classesid" />
            <result column="grade" property="grade" />
            <result column="classes" property="classes" />
            <result column="year" property="years" />
        </association>
    </resultMap>
    
    <select id="getStudentByCommid" parameterType="map" resultMap="stuSimpleResultMap">
        SELECT s.stu_id,s.stu_name,s.stu_sex,s.introduce FROM student s 
        INNER JOIN stu_community sc ON s.stu_id = sc.stu_id
        WHERE sc.community_id = #{id}
        LIMIT ${pageParam.startIndex},${pageParam.rows}
    </select>
    
    <select id="getStudentByCommidCount" parameterType="int" resultType="int">
        SELECT COUNT(*) FROM student s 
        INNER JOIN stu_community sc ON s.stu_id = sc.stu_id
        WHERE sc.community_id = #{id}
    </select>
    
    <select id="queryAll" parameterType="map" resultMap="stuSimpleResultMap">
            SELECT * from (
            SELECT *, case 
            WHEN grade = 0 then '一年级'
            WHEN grade = 1 then '二年级' 
            WHEN grade = 2 then '三年级' 
            WHEN grade = 3 then '四年级'
            ELSE '已毕业'
            END AS 'grade_name'
            FROM (
            SELECT s.*,cls.classes,cls.grade,CASE s.stu_sex WHEN 1 then '男' WHEN 0 then '女' end as 'sex_name'
             FROM  classes cls INNER JOIN student s on cls.classes_id = s.classes_id
             ) t
            ) c 
            <if test="keyWord != null">
            WHERE c.stu_name like '%${keyWord}%'
            OR CONCAT(c.stu_birthday,'')  like '%${keyWord}%'
            OR c.sex_name like '%${keyWord}%'
            </if>
            LIMIT ${pageParam.startIndex},${pageParam.rows}
    </select>

    <select id="getCount" parameterType="map" resultType="int">
            SELECT COUNT(*) FROM (
                SELECT * FROM (SELECT *, CASE  
                WHEN grade = 0 THEN '一年级' 
                WHEN grade = 1 THEN '二年级' 
                WHEN grade = 2 THEN '三年级' 
                WHEN grade = 3 THEN '四年级' 
                ELSE '已毕业' end as 'grade_name'FROM (
                    SELECT s.*,cls.classes,cls.grade,case s.stu_sex WHEN 1 THEN '男' WHEN 0 THEN '女' END AS 'sex_name'
                    FROM  classes cls inner join student s on cls.classes_id = s.classes_id) t
                ) b 
            ) c
           <if test="keyWord != null">
            WHERE c.stu_name LIKE '%${keyWord}%'
            OR CONCAT(c.stu_id,'')  LIKE '%${keyWord}%'
            OR CONCAT(c.stu_birthday,'')  LIKE '%${keyWord}%'
            OR c.sex_name LIKE '%${keyWord}%'
            </if>
    </select>
    
     <select id="queryOne" parameterType="int" resultMap ="stuSimpleResultMap">
        SELECT s.* FROM student s
        WHERE s.stu_id = #{id}
     </select>

     <select id="login" parameterType="com.manage.entity.Student" resultType="Integer">
        SELECT COUNT(*) FROM  student 
        WHERE classes_id IS NOT NULL
        AND stu_id = #{stuid} AND stu_pwd = #{stuPwd}
     </select>
     
     <select id="getCandidate" parameterType="map" resultMap="stuSimpleResultMap">
        SELECT * FROM (
        SELECT s.* FROM student s
        LEFT JOIN stu_community sc ON sc.stu_id = s.stu_id
        LEFT JOIN community c ON sc.community_id = c.community_id
        WHERE c.community_id = #{id}
        UNION ALL
        SELECT s.* FROM student s
        LEFT JOIN stu_community sc ON sc.stu_id = s.stu_id
        WHERE sc.stu_id IS NULL
        ) t 
        <if test="keyWord != null">
            WHERE t.stu_name LIKE '%${keyWord}%'
        </if>
        LIMIT ${pageParam.startIndex},${pageParam.rows}
     </select>
     
     <select id="getCandidateCount" parameterType="map" resultType="int">
        SELECT COUNT(*) FROM (
        SELECT * FROM (
        SELECT s.stu_name FROM student s
        LEFT JOIN stu_community sc ON sc.stu_id = s.stu_id
        LEFT JOIN community c ON sc.community_id = c.community_id
        WHERE c.community_id = #{id}
        UNION ALL
        SELECT s.stu_name FROM student s
        LEFT JOIN stu_community sc ON sc.stu_id = s.stu_id
        WHERE sc.stu_id IS NULL
        ) t 
        <if test="keyWord != null">
            WHERE t.stu_name LIKE '%${keyWord}%'
        </if>
        ) m
     </select>
     
    <insert id="save" parameterType="com.manage.entity.Student" 
            keyProperty="stuid" useGeneratedKeys="true">
        INSERT INTO student (stu_name, stu_sex, stu_birthday, classes_id) 
        VALUES (#{stuName}, #{stuSex}, #{stuBirthday}, #{classes.classesid})
             
    </insert>
    
    <update id="update" parameterType="com.manage.entity.Student">
       UPDATE student SET stu_name=#{stuName}, stu_sex=#{stuSex}, stu_birthday=#{stuBirthday},
       classes_id=#{classes.classesid} WHERE stu_id = #{stuid}
    </update>
     
     <update id="updateImg" parameterType="com.manage.entity.Student">
        UPDATE student SET img = #{img}
        WHERE stu_id = #{stuid}
     </update>
     
     <update id="updateIntroduce" parameterType="com.manage.entity.Student">
        UPDATE student SET introduce=#{introduce} 
        WHERE stu_id= #{stuid}
     </update>
    
    <update id="updatePwd" parameterType="com.manage.entity.Student">
        UPDATE student SET stu_pwd = #{stuPwd}
        WHERE stu_id = #{stuid}
    </update>
    
    <delete id="deleteMany">
        DELETE FROM student WHERE stu_id in
        <foreach collection="list" item="id" index="index" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </delete>
    
    <select id="getCommRequestStus" parameterType="map" resultMap="stuSimpleResultMap">
        SELECT s.stu_id,s.stu_name,s.stu_sex,s.introduce FROM student s
        INNER JOIN stu_comm_request scr ON s.stu_id = scr.stu_id
        WHERE scr.comm_id = #{id} AND scr.status = 0
        LIMIT ${pageParam.startIndex},${pageParam.rows}
    </select>

    <select id="getCommRequestStusCount" parameterType="int" resultType="int">
        SELECT COUNT(*) FROM student s
        INNER JOIN stu_comm_request scr ON s.stu_id = scr.stu_id
        WHERE scr.comm_id = #{id} AND scr.status = 0
    </select>
    
       
</mapper>